exit
xxx.values[1]
xxx.values[0]
xxx.values
xxx.value[0]
xxx
xxx[0]
xxx[1]
xxx.[1]
xxx.first.value
xxx.first
xxx.value.first
xxx.value
xxx
exit
twitter.value?("Twitter")
twitter[2]
twitter
exit
y
z
exit
z
exit
!qz.empty?
qz.empty?
qz.empty!
qz.empty?!
qz["channels"].first
qz["channels"]
qz.empty?
qz["channels"]
qz
exit
q
exitq
exit
z.methods.sort
z.key[0]
z.[0]
z[1]
z[0]
z.value?("GooglePlus")
z
exit
y.first.key?("poop")
y.first
y.key?("poop")
y
exit
y.key?("type")
y[0].key?("type")
y.key[0]?("type")
y.key?("type")
y.key.first
y.key
y
exit
x["channels"].first
x["channels"].key("type")
x["channels"]
x
exit
channels
exit
channels
exit
key.value?("+whitehouse")
key
key.value?("GooglePlus")
key
key.value?("GooglePlus")
key.value?"(GooglePlus")
pair
key
exit
twitter_handles
exit
y[0]
y
xyz
n
xyz
y
exit
y.methods.sort
y.methods.sort?
y
twitter_handles
   y.each {|x| if x.value?("Twitter") then twitter_handles << x  end}
y
exit
twitter_handles
  y.each {|x| if x.value?("Twitter") then twitter_handles << x  end}
  y.each {|x| if x.value?("Twitter") then twitter_handles << x.value end}
  y.each {|x| if x.value?("Twitter") then twitter_handles << x.value}
  y.each {|x| if x.value?("Twitter") : twitter_handles << x.value}
      y.each {|x| if x.value?("Twitter") twitter_handles << x.value}
      y.each {|x| if x.value?("Twitter") twitter_handles << x.value?}
y
twitter_handles
y.each {|x| twitter_handles << x.value?("Twitter")}
y.each {|x| twitter_handles << x.value?("Twitter")
y.each {|x| twitter_handles << x.value?(
y.each {|x| puts x}
y
exit
y.each 
y.length
y
exit
channels.length
y.first.key?("boner")
y.first.key?
y.first
y
exit
y.length
y.each do
y.methods.sort
y
exit
t.first
t
exit
do |d| puts t."hello"
do |d| puts "hello"
do
do |s|
channels.each
channels
t
  channels.each do |t| twitter_handles << t.value?("Twitter") end
    channels.each do |t| twitter_handles << t.value?("Twitter")   puts "boner" end
  channels.each do |t| twitter_handles << channels.value?("Twitter")   puts "boner"
      twitter_handles << channels.value?("Twitter")
    channels.each do |t|
      twitter_handles << channels.value?("Twitter")
    channels.each do |t|
channels
channels.each do |t|
channels
n
@response["officials"].first["channels"][0]
@response["officials"].first["channels"]
@response["officials"].first["channels"][0]
@response["officials"].first["channels"][0].key?("type")
@response["officials"].first["channels"][0].key?["type"]
@response["officials"].first["channels"][0].key?[
@response["officials"].first["channels"][0]
@response["officials"].first["channels"]
@response["officials"].first["channels"].first
@response["officials"].first["channels"]
@response["officials"].first
@response["officials"]["channels"]
@response["channels"]
@response
exit
channels
channels[0]
channels[0][0].value?("whitehouse")
channels[0][0]
channels[0][0].value?("whitehouse")
channels[0][0][1].value?("whitehouse")
channels[0][0].value?("whitehouse")
channels[0][0].first.value?("whitehouse")
channels[0][0]
channels[0][1]
channels[0]
channels[0][0]
channels[0][0].second
channels[0][0].first
channels[0][0].first.value?("whitehouse")
channels[0][0].first
channels[0][0].first.value?("whitehouse")
channels[0][0].value?("whitehouse")
channels[0][0][0].value?("whitehouse")
channels[0][0].value?("GooglePlus")
channels[0][0].value?("whitehouse")
channels[0][0].key("type")
channels[0][0]
channels[0][0].key("id")
channels[0][0].key("0")
channels[0][0].key("0
channels[0][0].key
channels[0][0].methods.sort
puts "boner"
channels[0][0].each
puts "boner"
|d|
channels[0][0].each
channels[0][0]
channels[0][0].key?("id")
channels[0][0].key?("whitehouse")
channels[0][0].key?(:id)
channels[0][0].has_key?("whitehouse")
channels[0][0].has_key?("id")
channels[0][0].has_keypair?("type")
channels[0][0].has_key_pair?("type")
channels[0][0].has_key?("type")
channels[0][0]
channels[0][0][0]
channels[0][0][0].first
channels[0][0][0].has_key?("boner")
channels[0][0][0].methods.sort
channels[0][0][0].methods
channels[0][0][0].key
channels[0][0][0]
channels[0][0]
channels[0]
channels
exit
q
exit
channels
